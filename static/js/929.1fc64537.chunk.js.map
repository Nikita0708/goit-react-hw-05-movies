{"version":3,"file":"static/js/929.1fc64537.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3D,uBACGE,EADH,EACGA,KACFC,EAAWD,EAAKE,QAFjB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,yFACkBP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,wCACuCM,IAFzD,uBACGJ,EADH,EACGA,KADH,kBAIEA,EAAKE,SAJP,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACGR,EADH,oBADlB,uBACGE,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKQ,MALP,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,2BADlB,uBACGE,EADH,EACGA,KADH,kBAIEA,EAAKE,SAJP,kE,8IChCP,EAAyB,6BAAzB,EAAgE,8BAAhE,EAA6G,mCAA7G,EAA+J,mCAA/J,EAAgN,kCAAhN,EAA8P,gC,SC6E9P,EAzEqB,WAAO,IAAD,YACzB,GAA8BQ,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEUb,EAAAA,EAAAA,IAAkBc,OAAOJ,IAFnC,OAEPd,EAFO,OAGbW,EAAWX,GAHE,gDAKbmB,QAAQC,IAAI,KAAMC,SALL,yDAAH,qDAQdJ,GACD,GAAE,CAACH,KAGF,gCACGJ,IACC,4BACE,SAAC,KAAD,CAASY,GAAE,iBAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUW,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAKC,UAAWC,EAAtD,sBAGA,iBAAKD,UAAWC,EAAhB,WACE,gBACEC,IAAG,0CAAqCjB,EAAQkB,aAChDC,IAAKnB,EAAQoB,MACbL,UAAWC,KAEb,iBAAKD,UAAWC,EAAhB,WACE,4BACE,wBAAKhB,EAAQqB,kBACb,6BAAKrB,EAAQsB,aAAb,WAEF,4BACE,yCACA,6CAAqBtB,EAAQuB,eAC7B,0CAAkBvB,EAAQwB,oBAE5B,4BACE,0CACA,uBAAIxB,EAAQyB,eAEd,4BACE,qCACA,uBAAIzB,EAAQ0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,qBAM3D,iBAAKf,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEJ,GAAG,OACHC,MAAO,CAAEC,KAAI,iBAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAUW,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KACxCC,UAAWC,EAHb,mBAOA,SAAC,KAAD,CACEJ,GAAG,SACHC,MAAO,CAAEC,KAAI,iBAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAUW,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KACxCC,UAAWC,EAHb,wBAQF,SAAC,KAAD,SAIP,C","sources":["components/API/Api.jsx","webpack://react-homework-template/./src/components/MovieDetails/moviedetails.module.css?cdb3","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst key = 'e32606210989f5ad28c9406f2323d1f2';\n\nexport async function fetchTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n  const response = data.results;\n  return response;\n}\n\nexport async function fetchMoviesWithQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  return data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchCast(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n\n  return data.cast;\n}\n\nexport async function fetchReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  return data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"moviedetails_poster__XPSdv\",\"details\":\"moviedetails_details__GUEeR\",\"details_link\":\"moviedetails_details_link__RK9tJ\",\"details_wrap\":\"moviedetails_details_wrap__275ET\",\"bottom_wrap\":\"moviedetails_bottom_wrap__VH0cJ\",\"link_wrap\":\"moviedetails_link_wrap__0FBux\"};","import { useEffect, useState } from 'react';\nimport { fetchMovieDetails } from 'components/API/Api';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport s from './moviedetails.module.css';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const response = await fetchMovieDetails(Number(movieId));\n        setDetails(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {details && (\n        <div>\n          <NavLink to={location?.state?.from ?? '/'} className={s.details_link}>\n            Go Back\n          </NavLink>\n          <div className={s.details}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${details.poster_path}`}\n              alt={details.title}\n              className={s.poster}\n            />\n            <div className={s.details_wrap}>\n              <div>\n                <h1>{details.original_title}</h1>\n                <p>({details.release_date})</p>\n              </div>\n              <div>\n                <h2>User votes:</h2>\n                <p>User popularity: {details.popularity}</p>\n                <p>Vote average: {details.vote_average}</p>\n              </div>\n              <div>\n                <h2>description:</h2>\n                <p>{details.overview}</p>\n              </div>\n              <div>\n                <h2>genres:</h2>\n                <p>{details.genres.map(genre => genre.name).join(', ')}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={s.bottom_wrap}>\n        <div className={s.link_wrap}>\n          <NavLink\n            to=\"cast\"\n            state={{ from: location?.state?.from ?? '/' }}\n            className={s.details_link}\n          >\n            Cast\n          </NavLink>\n          <NavLink\n            to=\"review\"\n            state={{ from: location?.state?.from ?? '/' }}\n            className={s.details_link}\n          >\n            Review\n          </NavLink>\n        </div>\n        <Outlet />\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","key","fetchTrending","data","response","results","fetchMoviesWithQuery","searchQuery","fetchMovieDetails","id","fetchCast","cast","fetchReviews","useState","details","setDetails","location","useLocation","movieId","useParams","useEffect","getMovie","Number","console","log","message","to","state","from","className","s","src","poster_path","alt","title","original_title","release_date","popularity","vote_average","overview","genres","map","genre","name","join"],"sourceRoot":""}