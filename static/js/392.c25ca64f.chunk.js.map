{"version":3,"file":"static/js/392.c25ca64f.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3D,uBACGE,EADH,EACGA,KACFC,EAAWD,EAAKE,QAFjB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,yFACkBP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,wCACuCM,IAFzD,uBACGJ,EADH,EACGA,KADH,kBAIEA,EAAKE,SAJP,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACGR,EADH,oBADlB,uBACGE,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKQ,MALP,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,2BADlB,uBACGE,EADH,EACGA,KADH,kBAIEA,EAAKE,SAJP,kE,sIChCP,EAAyB,qBAAzB,EAAqD,mBAArD,EAA+E,mB,SC4C/E,EAzCa,WACX,OAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEER,EAAAA,EAAAA,GAAUS,OAAOJ,IAFnB,OAEXK,EAFW,OAGjBN,EAAQM,GAHS,gDAKjBC,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBL,GACD,GAAE,CAACH,KAGF,2BACmB,IAAhBJ,EAAKa,SACJ,eAAIC,UAAWC,EAAf,SACGf,EAAKgB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,UAAWrB,EAAS,EAATA,GAC1C,OACE,gBAAagB,UAAWC,EAAxB,WACE,gBACEK,IAAG,0CAAqCF,GACxCG,IAAKJ,EACLH,UAAWC,KAEb,uBAAIE,KACJ,uCAAeE,EAAf,SAPOrB,EAUZ,MAGY,IAAhBE,EAAKa,SACJ,mFAIP,C","sources":["components/API/Api.jsx","webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst key = 'e32606210989f5ad28c9406f2323d1f2';\n\nexport async function fetchTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n  const response = data.results;\n  return response;\n}\n\nexport async function fetchMoviesWithQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  return data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchCast(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n\n  return data.cast;\n}\n\nexport async function fetchReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  return data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"cast_poster__VH74P\",\"list\":\"cast_list__bULim\",\"item\":\"cast_item__AMMjV\"};","import { fetchCast } from 'components/API/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport s from './cast.module.css';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const resp = await fetchCast(Number(movieId));\n        setCast(resp);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.length !== 0 && (\n        <ul className={s.list}>\n          {cast.map(({ name, profile_path, character, id }) => {\n            return (\n              <li key={id} className={s.item}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                  alt={name}\n                  className={s.poster}\n                />\n                <p>{name}</p>\n                <p>Character: {character} </p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {cast.length === 0 && (\n        <p>We have no information about the actors of this movie</p>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","key","fetchTrending","data","response","results","fetchMoviesWithQuery","searchQuery","fetchMovieDetails","id","fetchCast","cast","fetchReviews","useState","setCast","movieId","useParams","useEffect","fetchDetails","Number","resp","console","log","message","length","className","s","map","name","profile_path","character","src","alt"],"sourceRoot":""}